import sys
sys.dont_write_bytecode = True #gia na min dimiourgite se kathe ektelesi o fakelos pycache
import tkinter as tk
from PIL import ImageTk , Image


class Rules(tk.Tk):
    def __init__(self):
        super().__init__()
        self.title("Scrabble")
        self.geometry("1520x980")
        self.configure(background="lightgrey")

        #-----------Scrabble logo------------#
        self.logo_image = Image.open("Scrabble.png")
        self.resized_logo = self.logo_image.resize((500, 225), Image.Resampling.LANCZOS)
        self.new_logo = ImageTk.PhotoImage(self.resized_logo)
        self.logo = tk.Label(self, background= "lightgrey", image = self.new_logo, width= 500, height = 225)
        self.logo.place(x= 480, y = 100)
        #---------------Info-----------------#
        self.info_title = tk.Label(self, background= "lightgrey", width=100, borderwidth = 2, relief = "solid",
             text = "\nΤΟ ΠΑΙΧΝΙΔΙ\n\nΤο scrabble είναι ένα αρκετά διάσημο παιχνίδι, στο οποίο συμμετέχουν δύο ή περισσότεροι παίκτες και νικητής αναδεικνύεται ο \nπαίκτης που θα συγκεντρώσει τη μεγαλύτερη δυνατή βαθμολογία σχηματίζοντας λέξεις σε πίνακα 15x15 κελιών σύμφωνα με\n προκαθορισμένους κανόνες. \n\nΣυγκεκριμένα, οι λέξεις σχηματίζονται με γράμματα που ο παίκτης τραβάει από μία κληρωτίδα \nκαι η αξία της κάθε λέξης καθορίζεται: α) από τα γράμματα που περιέχει και β) από τη θέση στην οποία θα τοποθετηθεί. \nΑυτό σημαίνει ότι οι λέξεις δεν έχουν πάντα την ίδια αξία, εφόσον η επιλογή ορισμένων θέσεων στον πίνακα \nμπορεί να αυξήσει τη βαθμολογία τους. \n\nΕπιπλέον, κάθε νέα λέξη που σχηματίζεται στον πίνακα, θα πρέπει να επαναχρησιμοποιεί τουλάχιστον ένα γράμμα από τις λέξεις\n που υπάρχουν ήδη σε αυτόν, με τον ίδιο τρόπο που συμπληρώνουμε και το σταυρόλεξο.\n Ο περιορισμός αυτός δεν ισχύει για την πρώτη λέξη που θα τοποθετηθεί στον πίνακα, η οποία θα πρέπει οπωσδήποτε να ξεκινά, \nνα τελειώνει ή να διασχίζει το κεντρικό κελί του. Οι λέξεις τοποθετούνται οριζόντια ή κάθετα, και εξετάζεται η εγκυρότητα των λέξεων\n που σχηματίζονται με την γειτνίαση με ένα ή περισσότερα γράμματα στον πίνακα κατά την τοποθέτησή τους. \n\nΣτον πίνακα εμφανίζονται κελιά (μπλε, γαλάζια, ροζ και κόκκινα) τα οποία πολλαπλασιάζουν την αξία του γράμματος ή \nτης λέξης που περνάει από αυτά. Με την εκκίνηση του παιχνιδιού, κάθε παίκτης λαμβάνει τυχαία 7 γράμματα από μια κληρωτίδα. \nΜετά τον σχηματισμό μιας λέξης, ο παίκτης συμπληρώνει από την κληρωτίδα τα γράμματα που θα έχει στη διάθεσή του στον \nεπόμενο γύρο, ώστε πάντα να έχει 7 γράμματα. \n\nΑν δεν μπορεί να σχηματίσει κάποια λέξη, επιτρέπεται να επιστρέψει μέχρι 3 τυχαία γράμματα από τα 7 που έχει στη διάθεσή του \nστη κληρωτίδα και να τραβήξει τον αντίστοιχο αριθμό γραμμάτων, αλλά ταυτόχρονα χάνει τη σειρά του. \n\nΤο παιχνίδι ολοκληρώνεται όταν δεν υπάρχουν αρκετά γράμματα πλέον στην κληρωτίδα ώστε όλοι οι παίκτες \nνα έχουν από 7 γράμματα στη διάθεσή τους.\n", font= 55)
        self.info_title.place(x = 270, y = 350)
        
        

        def previous_page():
            self.destroy()
            from intro_page import IntroPage
            intro = IntroPage()
            intro.mainloop()

        #----------Buttons--------------#
        previous_page_button = tk.Button(self, text="Αρχική Σελίδα", command=previous_page)
        previous_page_button.place(x = 680, y = 900)